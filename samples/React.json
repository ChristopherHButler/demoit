{
  "editor": {
    "theme": "light",
    "statusBar": false,
    "layout": {
      "direction": "vertical",
      "sizes": [
        70,
        30
      ],
      "elements": [
        "editor",
        {
          "direction": "horizontal",
          "sizes": [
            50,
            50
          ],
          "elements": [
            "output",
            "log"
          ]
        }
      ]
    }
  },
  "dependencies": [
    "./resources/react-16.7.0-alpha.0.js",
    "./resources/react-dom.16.7.0-alpha.0.js"
  ],
  "files": [
    {
      "filename": "ReactHooks.js",
      "content": "import Title from 'Title.js';\n\nconst useState = React.useState;\n\nconst App = function () {\n  const [ count, change ] = useState(0);\n  console.log(`count is: ${ count }`);\n  return (\n  \t<section>\n      <Title count={ count } />\n      <button onClick={ () => change(count + 1) }>\n        Click me\n      </button>\n    </section>\n  )\n}\n\nReactDOM.render(<App />, document.querySelector('.output'));\n",
      "editing": false,
      "preview": "<div class=\"CodeMirror cm-s-light CodeMirror-focused\"><div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 18px; left: 22px;\"><textarea autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\" tabindex=\"0\"></textarea></div><div class=\"CodeMirror-vscrollbar\" tabindex=\"-1\" cm-not-content=\"true\"><div style=\"min-width: 1px; height: 0px;\"></div></div><div class=\"CodeMirror-hscrollbar\" tabindex=\"-1\" cm-not-content=\"true\"><div style=\"height: 100%; min-height: 1px; width: 0px;\"></div></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 0px; margin-bottom: -15px; border-right-width: 15px; min-height: 473px; min-width: 654.984px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"><span><span>​</span>x</span></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-cursors\" style=\"\"><div class=\"CodeMirror-cursor\" style=\"left: 4px; top: 0px; height: 23px;\">&nbsp;</div></div><div class=\"CodeMirror-code\" role=\"presentation\" style=\"\"><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">import</span> <span class=\"cm-def\">Title</span> <span class=\"cm-keyword\">from</span> <span class=\"cm-string\">'Title.js'</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\">​</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">const</span> <span class=\"cm-def\">useState</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">React</span>.<span class=\"cm-property\">useState</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\">​</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">const</span> <span class=\"cm-def\">App</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\">function</span> () {</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">  <span class=\"cm-keyword\">const</span> [ <span class=\"cm-def\">count</span>, <span class=\"cm-def\">change</span> ] <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">useState</span>(<span class=\"cm-number\">0</span>);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">  <span class=\"cm-variable\">console</span>.<span class=\"cm-property\">log</span>(<span class=\"cm-string-2\">`count is: ${</span> <span class=\"cm-variable-2\">count</span> <span class=\"cm-string-2\">}`</span>);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">  <span class=\"cm-keyword\">return</span> (</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">  <span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">  </span><span class=\"cm-tag cm-bracket\">&lt;</span><span class=\"cm-tag\">section</span><span class=\"cm-tag cm-bracket\">&gt;</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">      <span class=\"cm-tag cm-bracket\">&lt;</span><span class=\"cm-tag\">Title</span> <span class=\"cm-attribute\">count</span>={ <span class=\"cm-variable\">count</span> } <span class=\"cm-tag cm-bracket\">/&gt;</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">      <span class=\"cm-tag cm-bracket\">&lt;</span><span class=\"cm-tag\">button</span> <span class=\"cm-attribute\">onClick</span>={ () <span class=\"cm-operator\">=&gt;</span> <span class=\"cm-variable\">change</span>(<span class=\"cm-variable\">count</span> <span class=\"cm-operator\">+</span> <span class=\"cm-number\">1</span>) }<span class=\"cm-tag cm-bracket\">&gt;</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">        Click me</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">      <span class=\"cm-tag cm-bracket\">&lt;/</span><span class=\"cm-tag\">button</span><span class=\"cm-tag cm-bracket\">&gt;</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">    <span class=\"cm-tag cm-bracket\">&lt;/</span><span class=\"cm-tag\">section</span><span class=\"cm-tag cm-bracket\">&gt;</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">  )</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\">​</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable\">ReactDOM</span>.<span class=\"cm-property\">render</span>(<span class=\"cm-tag cm-bracket\">&lt;</span><span class=\"cm-tag\">App</span> <span class=\"cm-tag cm-bracket\">/&gt;</span>, <span class=\"cm-variable\">document</span>.<span class=\"cm-variable\">querySelector</span>(<span class=\"cm-string\">'.output'</span>));</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\">​</span></span></pre></div></div></div></div></div><div style=\"position: absolute; height: 15px; width: 1px; border-bottom: 0px solid transparent; top: 473px;\"></div><div class=\"CodeMirror-gutters\" style=\"display: none; height: 488px;\"></div></div></div>"
    },
    {
      "content": "const useEffect = React.useEffect;\nconst useState = React.useState;\n\nconst withAnswer = Component => function (props) {\n  const [ answer, setAnswer ] = useState(null);\n  \n  useEffect(() => {\n    setTimeout(() => setAnswer(42), 1000);\n  }, []);\n  \n  return <Component {...props } answer={ answer }/>;\n}\n\nconst WrappedTitle = withAnswer(function Title({ answer }) {\n  return <h1>Answer: { answer ? answer : '...' }</h1>;\n});\nfunction Header() {\n \treturn <header><WrappedTitle /></header>; \n}\nfunction App() {\n  return <Header />;\n}\n\nReactDOM.render(<App />, document.querySelector('.output'));\n\nconst answer = 42;\n\nexport default answer;",
      "filename": "HoC.js",
      "editing": false,
      "preview": "<div class=\"CodeMirror cm-s-light CodeMirror-focused\"><div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 386px; left: 227px;\"><textarea autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\" tabindex=\"0\"></textarea></div><div class=\"CodeMirror-vscrollbar\" tabindex=\"-1\" cm-not-content=\"true\"><div style=\"min-width: 1px; height: 0px;\"></div></div><div class=\"CodeMirror-hscrollbar\" tabindex=\"-1\" cm-not-content=\"true\"><div style=\"height: 100%; min-height: 1px; width: 0px;\"></div></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 0px; margin-bottom: -15px; border-right-width: 15px; min-height: 680px; min-width: 655px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"><span><span>​</span>x</span></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-cursors\" style=\"\"><div class=\"CodeMirror-cursor\" style=\"left: 209px; top: 368px; height: 23px;\">&nbsp;</div></div><div class=\"CodeMirror-code\" role=\"presentation\" style=\"\"><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">const</span> <span class=\"cm-def\">useEffect</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">React</span>.<span class=\"cm-property\">useEffect</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">const</span> <span class=\"cm-def\">useState</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">React</span>.<span class=\"cm-property\">useState</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\">​</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">const</span> <span class=\"cm-def\">withAnswer</span> <span class=\"cm-operator\">=</span> <span class=\"cm-def\">Component</span> <span class=\"cm-operator\">=&gt;</span> <span class=\"cm-keyword\">function</span> (<span class=\"cm-def\">props</span>) {</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">  <span class=\"cm-keyword\">const</span> [ <span class=\"cm-def\">answer</span>, <span class=\"cm-def\">setAnswer</span> ] <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">useState</span>(<span class=\"cm-atom\">null</span>);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">  </span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">  <span class=\"cm-variable\">useEffect</span>(() <span class=\"cm-operator\">=&gt;</span> {</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">    <span class=\"cm-variable\">setTimeout</span>(() <span class=\"cm-operator\">=&gt;</span> <span class=\"cm-variable-2\">setAnswer</span>(<span class=\"cm-number\">42</span>), <span class=\"cm-number\">1000</span>);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">  }, []);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">  </span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">  <span class=\"cm-keyword\">return</span> <span class=\"cm-tag cm-bracket\">&lt;</span><span class=\"cm-tag\">Component</span> {<span class=\"cm-meta\">...</span><span class=\"cm-variable\">props</span> } <span class=\"cm-attribute\">answer</span>={ <span class=\"cm-variable\">answer</span> }<span class=\"cm-tag cm-bracket\">/&gt;</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\">​</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">const</span> <span class=\"cm-def\">WrappedTitle</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">withAnswer</span>(<span class=\"cm-keyword\">function</span> <span class=\"cm-def\">Title</span>({ <span class=\"cm-def\">answer</span> }) {</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">  <span class=\"cm-keyword\">return</span> <span class=\"cm-tag cm-bracket\">&lt;</span><span class=\"cm-tag\">h1</span><span class=\"cm-tag cm-bracket\">&gt;</span>Answer: { <span class=\"cm-variable\">answer</span> <span class=\"cm-operator\">?</span> <span class=\"cm-variable\">answer</span> : <span class=\"cm-string\">'...'</span> }<span class=\"cm-tag cm-bracket\">&lt;/</span><span class=\"cm-tag\">h1</span><span class=\"cm-tag cm-bracket\">&gt;</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">});</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">function</span> <span class=\"cm-def\">Header</span>() {</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> <span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\"> </span><span class=\"cm-keyword\">return</span> <span class=\"cm-tag cm-bracket\">&lt;</span><span class=\"cm-tag\">header</span><span class=\"cm-tag cm-bracket\">&gt;&lt;</span><span class=\"cm-tag\">WrappedTitle</span> <span class=\"cm-tag cm-bracket\">/&gt;&lt;/</span><span class=\"cm-tag\">header</span><span class=\"cm-tag cm-bracket\">&gt;</span>; </span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">function</span> <span class=\"cm-def\">App</span>() {</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">  <span class=\"cm-keyword\">return</span> <span class=\"cm-tag cm-bracket\">&lt;</span><span class=\"cm-tag\">Header</span> <span class=\"cm-tag cm-bracket\">/&gt;</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\">​</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable\">ReactDOM</span>.<span class=\"cm-property\">render</span>(<span class=\"cm-tag cm-bracket\">&lt;</span><span class=\"cm-tag\">App</span> <span class=\"cm-tag cm-bracket\">/&gt;</span>, <span class=\"cm-variable\">document</span>.<span class=\"cm-variable\">querySelector</span>(<span class=\"cm-string\">'.output'</span>));</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\">​</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">const</span> <span class=\"cm-def\">answer</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">42</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\">​</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">export</span> <span class=\"cm-keyword\">default</span> <span class=\"cm-variable\">answer</span>;</span></pre></div></div></div></div></div><div style=\"position: absolute; height: 15px; width: 1px; border-bottom: 0px solid transparent; top: 680px;\"></div><div class=\"CodeMirror-gutters\" style=\"display: none; height: 695px;\"></div></div></div>"
    },
    {
      "content": "export default function Title({ count }) {\n  return <h1>Counter: { count }</h1>;\n}",
      "filename": "Title.js",
      "editing": false,
      "preview": "<div class=\"CodeMirror cm-s-light CodeMirror-focused\"><div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 41px; left: 421.562px;\"><textarea autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\" tabindex=\"0\"></textarea></div><div class=\"CodeMirror-vscrollbar\" tabindex=\"-1\" cm-not-content=\"true\"><div style=\"min-width: 1px; height: 0px;\"></div></div><div class=\"CodeMirror-hscrollbar\" tabindex=\"-1\" cm-not-content=\"true\"><div style=\"height: 100%; min-height: 1px; width: 0px;\"></div></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 0px; margin-bottom: -15px; border-right-width: 15px; min-height: 105px; min-width: 460.594px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"><span><span>​</span>x</span></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-cursors\" style=\"\"><div class=\"CodeMirror-cursor\" style=\"left: 403.562px; top: 23px; height: 23px;\">&nbsp;</div></div><div class=\"CodeMirror-code\" role=\"presentation\" style=\"\"><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">export</span> <span class=\"cm-keyword\">default</span> <span class=\"cm-keyword\">function</span> <span class=\"cm-def\">Title</span>({ <span class=\"cm-def\">count</span> }) {</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">  <span class=\"cm-keyword\">return</span> <span class=\"cm-tag cm-bracket\">&lt;</span><span class=\"cm-tag\">h1</span><span class=\"cm-tag cm-bracket\">&gt;</span>Counter: { <span class=\"cm-variable\">count</span> }<span class=\"cm-tag cm-bracket\">&lt;/</span><span class=\"cm-tag\">h1</span><span class=\"cm-tag cm-bracket\">&gt;</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre></div></div></div></div></div><div style=\"position: absolute; height: 15px; width: 1px; border-bottom: 0px solid transparent; top: 105px;\"></div><div class=\"CodeMirror-gutters\" style=\"display: none; height: 120px;\"></div></div></div>"
    }
  ]
}