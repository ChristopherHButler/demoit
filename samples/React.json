{
  "editor": {
    "theme": "light",
    "statusBar": true,
    "layout": {
      "name": "layoutBottom",
      "direction": "vertical",
      "sizes": [
        70,
        30
      ],
      "elements": [
        "editor",
        {
          "direction": "horizontal",
          "sizes": [
            50,
            50
          ],
          "elements": [
            "output",
            "log"
          ]
        }
      ]
    }
  },
  "dependencies": [
    "./resources/react-16.7.0-alpha.0.js",
    "./resources/react-dom.16.7.0-alpha.0.js"
  ],
  "files": [
    {
      "filename": "ReactHooks.js",
      "content": "import Title from 'Title.js';\nimport 'styles.css';\n\nconst useState = React.useState;\n\nconst App = function () {\n  const [ count, change ] = useState(0);\n  console.log(`count is: ${ count }`);\n  return (\n  \t<section>\n      <Title count={ count } />\n      <button onClick={ () => change(count + 1) }>\n        Click me\n      </button>\n    </section>\n  )\n}\n\nReactDOM.render(<App />, document.querySelector('.output'));\n",
      "editing": false,
      "entryPoint": true,
      "preview": "<div class=\"CodeMirror cm-s-light CodeMirror-focused\"><div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 35px; left: 185.969px;\"><textarea autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\" tabindex=\"0\"></textarea></div><div class=\"CodeMirror-vscrollbar\" tabindex=\"-1\" cm-not-content=\"true\"><div style=\"min-width: 1px; height: 0px;\"></div></div><div class=\"CodeMirror-hscrollbar\" tabindex=\"-1\" cm-not-content=\"true\"><div style=\"height: 100%; min-height: 1px; width: 0px;\"></div></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 0px; margin-bottom: -15px; border-right-width: 15px; min-height: 448px; min-width: 510.859px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"><pre>x</pre></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-cursors\" style=\"\"><div class=\"CodeMirror-cursor\" style=\"left: 171.969px; top: 21px; height: 21px;\">&nbsp;</div></div><div class=\"CodeMirror-code\" role=\"presentation\" style=\"\"><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">import</span> <span class=\"cm-def\">Title</span> <span class=\"cm-keyword\">from</span> <span class=\"cm-string\">'Title.js'</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">import</span> <span class=\"cm-string\">'styles.css'</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\">​</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">const</span> <span class=\"cm-def\">useState</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">React</span>.<span class=\"cm-property\">useState</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\">​</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">const</span> <span class=\"cm-def\">App</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\">function</span> () {</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">  <span class=\"cm-keyword\">const</span> [ <span class=\"cm-def\">count</span>, <span class=\"cm-def\">change</span> ] <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">useState</span>(<span class=\"cm-number\">0</span>);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">  <span class=\"cm-variable\">console</span>.<span class=\"cm-property\">log</span>(<span class=\"cm-string-2\">`count is: ${</span> <span class=\"cm-variable-2\">count</span> <span class=\"cm-string-2\">}`</span>);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">  <span class=\"cm-keyword\">return</span> (</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">  <span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">  </span><span class=\"cm-tag cm-bracket\">&lt;</span><span class=\"cm-tag\">section</span><span class=\"cm-tag cm-bracket\">&gt;</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">      <span class=\"cm-tag cm-bracket\">&lt;</span><span class=\"cm-tag\">Title</span> <span class=\"cm-attribute\">count</span>={ <span class=\"cm-variable\">count</span> } <span class=\"cm-tag cm-bracket\">/&gt;</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">      <span class=\"cm-tag cm-bracket\">&lt;</span><span class=\"cm-tag\">button</span> <span class=\"cm-attribute\">onClick</span>={ () <span class=\"cm-operator\">=&gt;</span> <span class=\"cm-variable\">change</span>(<span class=\"cm-variable\">count</span> <span class=\"cm-operator\">+</span> <span class=\"cm-number\">1</span>) }<span class=\"cm-tag cm-bracket\">&gt;</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">        Click me</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">      <span class=\"cm-tag cm-bracket\">&lt;/</span><span class=\"cm-tag\">button</span><span class=\"cm-tag cm-bracket\">&gt;</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">    <span class=\"cm-tag cm-bracket\">&lt;/</span><span class=\"cm-tag\">section</span><span class=\"cm-tag cm-bracket\">&gt;</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">  )</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\">​</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable\">ReactDOM</span>.<span class=\"cm-property\">render</span>(<span class=\"cm-tag cm-bracket\">&lt;</span><span class=\"cm-tag\">App</span> <span class=\"cm-tag cm-bracket\">/&gt;</span>, <span class=\"cm-variable\">document</span>.<span class=\"cm-variable\">querySelector</span>(<span class=\"cm-string\">'.output'</span>));</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\">​</span></span></pre></div></div></div></div></div><div style=\"position: absolute; height: 15px; width: 1px; border-bottom: 0px solid transparent; top: 448px;\"></div><div class=\"CodeMirror-gutters\" style=\"display: none; height: 463px;\"></div></div></div>"
    },
    {
      "content": "export default function Title({ count }) {\n  return <h1>Counter: { count }</h1>;\n}",
      "filename": "Title.js",
      "editing": false,
      "preview": "<div class=\"CodeMirror cm-s-light CodeMirror-focused\"><div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 41px; left: 421.562px;\"><textarea autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\" tabindex=\"0\"></textarea></div><div class=\"CodeMirror-vscrollbar\" tabindex=\"-1\" cm-not-content=\"true\"><div style=\"min-width: 1px; height: 0px;\"></div></div><div class=\"CodeMirror-hscrollbar\" tabindex=\"-1\" cm-not-content=\"true\"><div style=\"height: 100%; min-height: 1px; width: 0px;\"></div></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 0px; margin-bottom: -15px; border-right-width: 15px; min-height: 105px; min-width: 460.594px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"><span><span>​</span>x</span></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-cursors\" style=\"\"><div class=\"CodeMirror-cursor\" style=\"left: 403.562px; top: 23px; height: 23px;\">&nbsp;</div></div><div class=\"CodeMirror-code\" role=\"presentation\" style=\"\"><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">export</span> <span class=\"cm-keyword\">default</span> <span class=\"cm-keyword\">function</span> <span class=\"cm-def\">Title</span>({ <span class=\"cm-def\">count</span> }) {</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">  <span class=\"cm-keyword\">return</span> <span class=\"cm-tag cm-bracket\">&lt;</span><span class=\"cm-tag\">h1</span><span class=\"cm-tag cm-bracket\">&gt;</span>Counter: { <span class=\"cm-variable\">count</span> }<span class=\"cm-tag cm-bracket\">&lt;/</span><span class=\"cm-tag\">h1</span><span class=\"cm-tag cm-bracket\">&gt;</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre></div></div></div></div></div><div style=\"position: absolute; height: 15px; width: 1px; border-bottom: 0px solid transparent; top: 105px;\"></div><div class=\"CodeMirror-gutters\" style=\"display: none; height: 120px;\"></div></div></div>"
    },
    {
      "content": "h1 {\n\tfont-family: Tahoma; \n}",
      "filename": "styles.css",
      "editing": false,
      "preview": "<div class=\"CodeMirror cm-s-light CodeMirror-focused\"><div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 35px; left: 203px;\"><textarea autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\" tabindex=\"0\"></textarea></div><div class=\"CodeMirror-vscrollbar\" tabindex=\"-1\" cm-not-content=\"true\"><div style=\"min-width: 1px; height: 0px;\"></div></div><div class=\"CodeMirror-hscrollbar\" tabindex=\"-1\" cm-not-content=\"true\"><div style=\"height: 100%; min-height: 1px; width: 0px;\"></div></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 0px; margin-bottom: -15px; border-right-width: 15px; min-height: 91px; min-width: 200px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-cursors\" style=\"\"><div class=\"CodeMirror-cursor\" style=\"left: 189px; top: 21px; height: 21px;\">&nbsp;</div></div><div class=\"CodeMirror-code\" role=\"presentation\" style=\"\"><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable\">h1</span> {</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">  </span><span class=\"cm-variable\">font</span><span class=\"cm-operator\">-</span><span class=\"cm-variable\">family</span>: <span class=\"cm-variable\">Tahoma</span>; </span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre></div></div></div></div></div><div style=\"position: absolute; height: 15px; width: 1px; border-bottom: 0px solid transparent; top: 91px;\"></div><div class=\"CodeMirror-gutters\" style=\"display: none; height: 106px;\"></div></div></div>"
    }
  ],
  "code": "\"use strict\";\n\nvar modules = [{\n  filename: \"ReactHooks.js\",\n  func: function func(require, exports, imported) {\n    'use strict';\n\n    var _slicedToArray = function () {\n      function sliceIterator(arr, i) {\n        var _arr = [];var _n = true;var _d = false;var _e = undefined;try {\n          for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);if (i && _arr.length === i) break;\n          }\n        } catch (err) {\n          _d = true;_e = err;\n        } finally {\n          try {\n            if (!_n && _i[\"return\"]) _i[\"return\"]();\n          } finally {\n            if (_d) throw _e;\n          }\n        }return _arr;\n      }return function (arr, i) {\n        if (Array.isArray(arr)) {\n          return arr;\n        } else if (Symbol.iterator in Object(arr)) {\n          return sliceIterator(arr, i);\n        } else {\n          throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n        }\n      };\n    }();\n\n    var _Title = require('Title.js');\n\n    var _Title2 = _interopRequireDefault(_Title);\n\n    require('styles.css');\n\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n\n    var useState = React.useState;\n\n    var App = function App() {\n      var _useState = useState(0),\n          _useState2 = _slicedToArray(_useState, 2),\n          count = _useState2[0],\n          change = _useState2[1];\n\n      console.log('count is: ' + count);\n      return React.createElement('section', null, React.createElement(_Title2.default, { count: count }), React.createElement('button', { onClick: function onClick() {\n          return change(count + 1);\n        } }, 'Click me'));\n    };\n\n    ReactDOM.render(React.createElement(App, null), document.querySelector('.output'));\n  },\n  exports: {}\n}, {\n  filename: \"Title.js\",\n  func: function func(require, exports, imported) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = Title;\n    function Title(_ref) {\n      var count = _ref.count;\n\n      return React.createElement(\"h1\", null, \"Counter: \", count);\n    }\n  },\n  exports: {}\n}, {\n  filename: \"styles.css\",\n  func: function func(require, exports, imported) {\n    \"use strict\";\n\n    imported && window.executeCSS(\"styles.css\", \"h1 {\\n\\tfont-family: Tahoma; \\n}\");\n  },\n  exports: {}\n}];\nvar _require = function _require(file) {\n  var module = modules.find(function (_ref2) {\n    var filename = _ref2.filename;\n    return filename === file;\n  });\n\n  if (!module) {\n    throw new Error('Demoit can not find \"' + file + '\" file.');\n  }\n  module.func(_require, module.exports, true);\n  return module.exports;\n};\nmodules[index].func(_require, modules[index].exports, false);"
}